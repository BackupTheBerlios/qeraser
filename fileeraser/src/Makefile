#############################################################################
# Makefile for building: ../bin/fileeraser
# Generated by qmake (1.04a) (Qt 3.1.1) on: Mon May  5 14:00:33 2003
# Project:  src.pro
# Template: app
# Command: $(QMAKE) -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -fomit-frame-pointer -pipe -march=i586 -mcpu=pentiumpro -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -fomit-frame-pointer -pipe -march=i586 -mcpu=pentiumpro -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/default -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib ../config_api/libconfig_api.a -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = fileeraserimpl.h \
		manual_dialogimpl.h \
		settings.h \
		config_frame.h
SOURCES = manual_dialogimpl.cpp \
		main.cpp \
		config_frame.cpp \
		fileeraserimpl.cpp
OBJECTS = manual_dialogimpl.o \
		main.o \
		config_frame.o \
		fileeraserimpl.o \
		config_erasing.o \
		config_general.o \
		info_dialog.o \
		fileeraser.o \
		config_dialog.o \
		manual_dialog.o
FORMS = config_erasing.ui \
		config_general.ui \
		info_dialog.ui \
		fileeraser.ui \
		config_dialog.ui \
		manual_dialog.ui
UICDECLS = config_erasing.h \
		config_general.h \
		info_dialog.h \
		fileeraser.h \
		config_dialog.h \
		manual_dialog.h
UICIMPLS = config_erasing.cpp \
		config_general.cpp \
		info_dialog.cpp \
		fileeraser.cpp \
		config_dialog.cpp \
		manual_dialog.cpp
SRCMOC   = moc_fileeraserimpl.cpp \
		moc_manual_dialogimpl.cpp \
		moc_config_frame.cpp \
		moc_config_erasing.cpp \
		moc_config_general.cpp \
		moc_info_dialog.cpp \
		moc_fileeraser.cpp \
		moc_config_dialog.cpp \
		moc_manual_dialog.cpp
OBJMOC = moc_fileeraserimpl.o \
		moc_manual_dialogimpl.o \
		moc_config_frame.o \
		moc_config_erasing.o \
		moc_config_general.o \
		moc_info_dialog.o \
		moc_fileeraser.o \
		moc_config_dialog.o \
		moc_manual_dialog.o
DIST	   = src.pro
QMAKE_TARGET = fileeraser
DESTDIR  = ../bin/
TARGET   = ../bin/fileeraser

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	test -d ../bin/ || mkdir -p ../bin/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: src.pro  $(QTDIR)/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile src.pro
qmake: 
	@$(QMAKE) -o Makefile src.pro

dist: 
	@mkdir -p .tmp/fileeraser && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/fileeraser/ && ( cd `dirname .tmp/fileeraser` && $(TAR) fileeraser.tar fileeraser && $(GZIP) fileeraser.tar ) && $(MOVE) `dirname .tmp/fileeraser`/fileeraser.tar.gz . && $(DEL_FILE) -r .tmp/fileeraser

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS) 
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../bin/$(TARGET) $(TARGET)


FORCE:

####### Compile

manual_dialogimpl.o: manual_dialogimpl.cpp manual_dialogimpl.h \
		manual_dialog.h

main.o: main.cpp settings.h \
		fileeraserimpl.h \
		../config_api/config_api.h \
		../config_api/utils.h \
		../config_api/find.h \
		info_dialog.h \
		manual_dialogimpl.h \
		config_frame.h \
		config_dialog.h \
		fileeraser.h \
		manual_dialog.h \
		config_general.h \
		config_erasing.h

config_frame.o: config_frame.cpp config_frame.h \
		config_general.h \
		config_erasing.h

fileeraserimpl.o: fileeraserimpl.cpp fileeraserimpl.h \
		info_dialog.h \
		manual_dialogimpl.h \
		config_frame.h \
		config_dialog.h \
		fileeraser.h \
		settings.h \
		manual_dialog.h \
		config_general.h \
		config_erasing.h \
		../config_api/config_api.h \
		../config_api/utils.h \
		../config_api/find.h

config_erasing.h: config_erasing.ui 
	$(UIC) config_erasing.ui -o config_erasing.h

config_erasing.cpp: config_erasing.h config_erasing.ui 
	$(UIC) config_erasing.ui -i config_erasing.h -o config_erasing.cpp

config_general.h: config_general.ui 
	$(UIC) config_general.ui -o config_general.h

config_general.cpp: config_general.h config_general.ui 
	$(UIC) config_general.ui -i config_general.h -o config_general.cpp

info_dialog.h: info_dialog.ui 
	$(UIC) info_dialog.ui -o info_dialog.h

info_dialog.cpp: info_dialog.h info_dialog.ui 
	$(UIC) info_dialog.ui -i info_dialog.h -o info_dialog.cpp

fileeraser.h: fileeraser.ui 
	$(UIC) fileeraser.ui -o fileeraser.h

fileeraser.cpp: fileeraser.h fileeraser.ui 
	$(UIC) fileeraser.ui -i fileeraser.h -o fileeraser.cpp

config_dialog.h: config_dialog.ui 
	$(UIC) config_dialog.ui -o config_dialog.h

config_dialog.cpp: config_dialog.h config_dialog.ui 
	$(UIC) config_dialog.ui -i config_dialog.h -o config_dialog.cpp

manual_dialog.h: manual_dialog.ui 
	$(UIC) manual_dialog.ui -o manual_dialog.h

manual_dialog.cpp: manual_dialog.h manual_dialog.ui 
	$(UIC) manual_dialog.ui -i manual_dialog.h -o manual_dialog.cpp

config_erasing.o: config_erasing.cpp config_erasing.h

config_general.o: config_general.cpp config_general.h

info_dialog.o: info_dialog.cpp info_dialog.h

fileeraser.o: fileeraser.cpp fileeraser.h

config_dialog.o: config_dialog.cpp config_dialog.h

manual_dialog.o: manual_dialog.cpp manual_dialog.h

moc_fileeraserimpl.o: moc_fileeraserimpl.cpp fileeraserimpl.h info_dialog.h \
		manual_dialogimpl.h \
		config_frame.h \
		config_dialog.h \
		fileeraser.h \
		settings.h \
		manual_dialog.h \
		config_general.h \
		config_erasing.h \
		../config_api/config_api.h \
		../config_api/utils.h \
		../config_api/find.h

moc_manual_dialogimpl.o: moc_manual_dialogimpl.cpp manual_dialogimpl.h manual_dialog.h

moc_config_frame.o: moc_config_frame.cpp config_frame.h config_general.h \
		config_erasing.h

moc_config_erasing.o: moc_config_erasing.cpp config_erasing.h 

moc_config_general.o: moc_config_general.cpp config_general.h 

moc_info_dialog.o: moc_info_dialog.cpp info_dialog.h 

moc_fileeraser.o: moc_fileeraser.cpp fileeraser.h 

moc_config_dialog.o: moc_config_dialog.cpp config_dialog.h 

moc_manual_dialog.o: moc_manual_dialog.cpp manual_dialog.h 

moc_fileeraserimpl.cpp: $(MOC) fileeraserimpl.h
	$(MOC) fileeraserimpl.h -o moc_fileeraserimpl.cpp

moc_manual_dialogimpl.cpp: $(MOC) manual_dialogimpl.h
	$(MOC) manual_dialogimpl.h -o moc_manual_dialogimpl.cpp

moc_config_frame.cpp: $(MOC) config_frame.h
	$(MOC) config_frame.h -o moc_config_frame.cpp

moc_config_erasing.cpp: $(MOC) config_erasing.h
	$(MOC) config_erasing.h -o moc_config_erasing.cpp

moc_config_general.cpp: $(MOC) config_general.h
	$(MOC) config_general.h -o moc_config_general.cpp

moc_info_dialog.cpp: $(MOC) info_dialog.h
	$(MOC) info_dialog.h -o moc_info_dialog.cpp

moc_fileeraser.cpp: $(MOC) fileeraser.h
	$(MOC) fileeraser.h -o moc_fileeraser.cpp

moc_config_dialog.cpp: $(MOC) config_dialog.h
	$(MOC) config_dialog.h -o moc_config_dialog.cpp

moc_manual_dialog.cpp: $(MOC) manual_dialog.h
	$(MOC) manual_dialog.h -o moc_manual_dialog.cpp

####### Install

install_target: 
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/local/nin/ || $(MKDIR) $(INSTALL_ROOT)/usr/local/nin/
	$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/nin/$(QMAKE_TARGET)"
	-$(COPY) "../bin/$(QMAKE_TARGET)" "$(INSTALL_ROOT)/usr/local/nin/$(QMAKE_TARGET)"
	-strip "$(INSTALL_ROOT)/usr/local/nin/$(QMAKE_TARGET)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/nin/$(QMAKE_TARGET)"
	-$(DEL_DIR) "$(INSTALL_ROOT)/usr/local/nin/"


install: all install_target 

uninstall: uninstall_target 

